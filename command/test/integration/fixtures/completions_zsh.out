#!/usr/bin/env zsh
# zsh completion support for completions-test

autoload -U is-at-least

# shellcheck disable=SC2154
(( $+functions[__completions_test_complete] )) ||
function __completions_test_complete {
  local name="$1"; shift
  local action="$1"; shift
  integer ret=1
  local -a values
  local expl lines
  _tags "$name"
  while _tags; do
    if _requested "$name"; then
      # shellcheck disable=SC2034
      lines="$(completions-test completions complete "${action}" "${@}")"
      values=("${(ps:\n:)lines}")
      if (( ${#values[@]} )); then
        while _next_label "$name" expl "$action"; do
          compadd -S '' "${expl[@]}" "${values[@]}"
        done
      fi
    fi
  done
}

# shellcheck disable=SC2154
(( $+functions[_completions_test] )) ||
function _completions_test() {
  local state

  function _commands() {
    local -a commands
    # shellcheck disable=SC2034
    commands=(
      'foo:Foo command.'
      'help:Show this help or the help of a sub-command.'
      'completions:Generate shell completions.'
    )
    _describe 'command' commands
  }

  function _command_args() {
    case "${words[1]}" in
      foo) _completions_test_foo ;;
      help) _completions_test_help ;;
      completions) _completions_test_completions ;;
    esac
  }

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \
    '(-h --help -m --main)'{-m,--main}'[Bar option.]:val:->val-boolean' \
    '1: :_commands' \
    '*:: :->command_args'

  case "$state" in
    command_args) _command_args ;;
    val-boolean) __completions_test_complete val boolean  ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_foo] )) ||
function _completions_test_foo() {

  function _commands() {
    local -a commands
    # shellcheck disable=SC2034
    commands=(
      'bar:Bar command.'
    )
    _describe 'command' commands
  }

  function _command_args() {
    case "${words[1]}" in
      bar) _completions_test_foo_bar ;;
    esac
  }

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \
    '(-h --help -f --foo)'{-f,--foo}'[Foo option.]' \
    '1: :_commands' \
    '*:: :->command_args'

  case "$state" in
    command_args) _command_args ;;
    val-boolean) __completions_test_complete val boolean foo ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_foo_bar] )) ||
function _completions_test_foo_bar() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \
    '(-h --help -b --bar)'{-b,--bar}'[Bar option.]'

  case "$state" in
    val-boolean) __completions_test_complete val boolean foo bar ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_help] )) ||
function _completions_test_help() {

  function _commands() {
    __completions_test_complete command command help
  }

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \
    '1: :_commands'

  case "$state" in
    val-boolean) __completions_test_complete val boolean help ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_completions] )) ||
function _completions_test_completions() {

  function _commands() {
    local -a commands
    # shellcheck disable=SC2034
    commands=(
      'bash:Generate shell completions for bash.'
      'fish:Generate shell completions for fish.'
      'zsh:Generate shell completions for zsh.'
    )
    _describe 'command' commands
  }

  function _command_args() {
    case "${words[1]}" in
      bash) _completions_test_completions_bash ;;
      fish) _completions_test_completions_fish ;;
      zsh) _completions_test_completions_zsh ;;
    esac
  }

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \
    '1: :_commands' \
    '*:: :->command_args'

  case "$state" in
    command_args) _command_args ;;
    val-boolean) __completions_test_complete val boolean completions ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_completions_bash] )) ||
function _completions_test_completions_bash() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean'

  case "$state" in
    val-boolean) __completions_test_complete val boolean completions bash ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_completions_fish] )) ||
function _completions_test_completions_fish() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean'

  case "$state" in
    val-boolean) __completions_test_complete val boolean completions fish ;;
  esac
}

# shellcheck disable=SC2154
(( $+functions[_completions_test_completions_zsh] )) ||
function _completions_test_completions_zsh() {

  _arguments -w -s -S -C \
    '(- *)'{-h,--help}'[Show this help.]' \
    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean'

  case "$state" in
    val-boolean) __completions_test_complete val boolean completions zsh ;;
  esac
}

# _completions_test "${@}"

compdef _completions_test completions-test

