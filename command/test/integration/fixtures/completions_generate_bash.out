#!/usr/bin/env bash
# bash completion support for completions-test v1.0.0

_completions_test() {
  local word cur prev listFiles
  local -a opts
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  cmd="_"
  opts=()
  listFiles=0

  _completions_test_complete() {
    local action="$1"; shift
    mapfile -t values < <( completions-test completions complete "${action}" "${@}" )
    for i in "${values[@]}"; do
      opts+=("$i")
    done
  }

  _completions_test_expand() {
    [ "$cur" != "${cur%\\}" ] && cur="$cur\\"
  
    # expand ~username type directory specifications
    if [[ "$cur" == \~*/* ]]; then
      eval cur=$cur
      
    elif [[ "$cur" == \~* ]]; then
      cur=${cur#\~}
      COMPREPLY=( $( compgen -P '~' -u $cur ) )
      return ${#COMPREPLY[@]}
    fi
  }

  _completions_test_file_dir() {
    listFiles=1
    local IFS=$'\t\n' xspec #glob
    _completions_test_expand || return 0
  
    if [ "${1:-}" = -d ]; then
      COMPREPLY=( ${COMPREPLY[@]:-} $( compgen -d -- $cur ) )
      #eval "$glob"    # restore glob setting.
      return 0
    fi
  
    xspec=${1:+"!*.$1"}	# set only if glob passed in as $1
    COMPREPLY=( ${COMPREPLY[@]:-} $( compgen -f -X "$xspec" -- "$cur" )           $( compgen -d -- "$cur" ) )
  }

  __completions_test() {
    opts=(-h --help -V --version -g --global -m --main -c --color -C --colors foo help completions)
    _completions_test_complete color
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 1 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -V|--version) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean ;;
      -m|--main) opts=(); _completions_test_complete boolean ;;
      -c|--color) opts=(); _completions_test_complete color ;;
      -C|--colors) opts=(); _completions_test_complete color ;;
    esac
  }

  __completions_test_foo() {
    opts=(-h --help -g --global -f --foo help bar)
    
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean foo ;;
      -f|--foo)  ;;
    esac
  }

  __completions_test_foo_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command foo help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean foo help ;;
    esac
  }

  __completions_test_foo_bar() {
    opts=(-h --help -g --global -b --bar help)
    
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean foo bar ;;
      -b|--bar)  ;;
    esac
  }

  __completions_test_foo_bar_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command foo bar help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 4 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean foo bar help ;;
    esac
  }

  __completions_test_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean help ;;
    esac
  }

  __completions_test_completions() {
    opts=(-h --help -g --global help bash fish zsh)
    
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions ;;
    esac
  }

  __completions_test_completions_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command completions help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions help ;;
    esac
  }

  __completions_test_completions_bash() {
    opts=(-h --help -g --global help)
    
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions bash ;;
    esac
  }

  __completions_test_completions_bash_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command completions bash help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 4 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions bash help ;;
    esac
  }

  __completions_test_completions_fish() {
    opts=(-h --help -g --global help)
    
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions fish ;;
    esac
  }

  __completions_test_completions_fish_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command completions fish help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 4 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions fish help ;;
    esac
  }

  __completions_test_completions_zsh() {
    opts=(-h --help -g --global help)
    
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 3 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions zsh ;;
    esac
  }

  __completions_test_completions_zsh_help() {
    opts=(-h --help -g --global)
    _completions_test_complete command completions zsh help
    if [[ ${cur} == -* || ${COMP_CWORD} -eq 4 ]] ; then
      return 0
    fi
    case "${prev}" in
      -h|--help) opts=() ;;
      -g|--global) opts=(); _completions_test_complete boolean completions zsh help ;;
    esac
  }

  for word in "${COMP_WORDS[@]}"; do
    case "${word}" in
      -*) ;;
      *)
        cmd_tmp="${cmd}_${word//[^[:alnum:]]/_}"
        if type "${cmd_tmp}" &>/dev/null; then
          cmd="${cmd_tmp}"
        fi
    esac
  done

  ${cmd}

  if [[ listFiles -eq 1 ]]; then
    return 0
  fi

  if [[ ${#opts[@]} -eq 0 ]]; then
    # shellcheck disable=SC2207
    COMPREPLY=($(compgen -f "${cur}"))
    return 0
  fi

  local values
  values="$( printf "\n%s" "${opts[@]}" )"
  local IFS=$'\n'
  # shellcheck disable=SC2207
  local result=($(compgen -W "${values[@]}" -- "${cur}"))
  if [[ ${#result[@]} -eq 0 ]]; then
    # shellcheck disable=SC2207
    COMPREPLY=($(compgen -f "${cur}"))
  else
    # shellcheck disable=SC2207
    COMPREPLY=($(printf '%q\n' "${result[@]}"))
  fi

  return 0
}

complete -F _completions_test -o bashdefault -o default completions-test
