export const snapshot = {};

snapshot[`command integration > should complete boolean arg 1`] = `"true\\nfalse"`;

snapshot[`command integration > should complete boolean arg from foo command 1`] = `"true\\nfalse"`;

snapshot[`command integration > should complete boolean arg from foo bar command 1`] = `"true\\nfalse"`;

snapshot[`command integration > should complete available commands for help command 1`] = `"foo\\nhelp\\ncompletions"`;

snapshot[`command integration > should complete enum 1`] = `"blue\\nyellow\\nred"`;

snapshot[`command integration > should generate bash completions 1`] = `\`#!/usr/bin/env bash\\n# bash completion support for completions-test v1.0.0\\n\\n_completions_test() {\\n  local word cur prev listFiles\\n  local -a opts\\n  COMPREPLY=()\\n  cur="\${COMP_WORDS[COMP_CWORD]}"\\n  prev="\${COMP_WORDS[COMP_CWORD-1]}"\\n  cmd="_"\\n  opts=()\\n  listFiles=0\\n\\n  _completions_test_complete() {\\n    local action="\$1"; shift\\n    mapfile -t values < <( completions-test completions complete "\${action}" "\${@}" )\\n    for i in "\${values[@]}"; do\\n      opts+=("\$i")\\n    done\\n  }\\n\\n  _completions_test_expand() {\\n    [ "\$cur" != "\${cur%\\\\\\\\}" ] && cur="\$cur\\\\\\\\"\\n  \\n    # expand ~username type directory specifications\\n    if [[ "\$cur" == \\\\~*/* ]]; then\\n      eval cur=\$cur\\n      \\n    elif [[ "\$cur" == \\\\~* ]]; then\\n      cur=\${cur#\\\\~}\\n      COMPREPLY=( \$( compgen -P '~' -u \$cur ) )\\n      return \${#COMPREPLY[@]}\\n    fi\\n  }\\n\\n  _completions_test_file_dir() {\\n    listFiles=1\\n    local IFS=\$'\\\\t\\\\n' xspec #glob\\n    _completions_test_expand || return 0\\n  \\n    if [ "\${1:-}" = -d ]; then\\n      COMPREPLY=( \${COMPREPLY[@]:-} \$( compgen -d -- \$cur ) )\\n      #eval "\$glob"    # restore glob setting.\\n      return 0\\n    fi\\n  \\n    xspec=\${1:+"!*.\$1"}\\t# set only if glob passed in as \$1\\n    COMPREPLY=( \${COMPREPLY[@]:-} \$( compgen -f -X "\$xspec" -- "\$cur" )           \$( compgen -d -- "\$cur" ) )\\n  }\\n\\n  __completions_test() {\\n    opts=(-h --help -V --version -g --global -m --main -c --color -C --colors foo help completions)\\n    _completions_test_complete color\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 1 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -V|--version) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean ;;\\n      -m|--main) opts=(); _completions_test_complete boolean ;;\\n      -c|--color) opts=(); _completions_test_complete color ;;\\n      -C|--colors) opts=(); _completions_test_complete color ;;\\n    esac\\n  }\\n\\n  __completions_test_foo() {\\n    opts=(-h --help -g --global -f --foo help bar)\\n    \\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 2 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean foo ;;\\n      -f|--foo)  ;;\\n    esac\\n  }\\n\\n  __completions_test_foo_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command foo help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 3 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean foo help ;;\\n    esac\\n  }\\n\\n  __completions_test_foo_bar() {\\n    opts=(-h --help -g --global -b --bar help)\\n    \\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 3 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean foo bar ;;\\n      -b|--bar)  ;;\\n    esac\\n  }\\n\\n  __completions_test_foo_bar_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command foo bar help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 4 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean foo bar help ;;\\n    esac\\n  }\\n\\n  __completions_test_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 2 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean help ;;\\n    esac\\n  }\\n\\n  __completions_test_completions() {\\n    opts=(-h --help -g --global help bash fish zsh)\\n    \\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 2 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command completions help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 3 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions help ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_bash() {\\n    opts=(-h --help -g --global help)\\n    \\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 3 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions bash ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_bash_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command completions bash help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 4 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions bash help ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_fish() {\\n    opts=(-h --help -g --global help)\\n    \\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 3 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions fish ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_fish_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command completions fish help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 4 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions fish help ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_zsh() {\\n    opts=(-h --help -g --global help)\\n    \\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 3 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions zsh ;;\\n    esac\\n  }\\n\\n  __completions_test_completions_zsh_help() {\\n    opts=(-h --help -g --global)\\n    _completions_test_complete command completions zsh help\\n    if [[ \${cur} == -* || \${COMP_CWORD} -eq 4 ]] ; then\\n      return 0\\n    fi\\n    case "\${prev}" in\\n      -h|--help) opts=() ;;\\n      -g|--global) opts=(); _completions_test_complete boolean completions zsh help ;;\\n    esac\\n  }\\n\\n  for word in "\${COMP_WORDS[@]}"; do\\n    case "\${word}" in\\n      -*) ;;\\n      *)\\n        cmd_tmp="\${cmd}_\${word//[^[:alnum:]]/_}"\\n        if type "\${cmd_tmp}" &>/dev/null; then\\n          cmd="\${cmd_tmp}"\\n        fi\\n    esac\\n  done\\n\\n  \${cmd}\\n\\n  if [[ listFiles -eq 1 ]]; then\\n    return 0\\n  fi\\n\\n  if [[ \${#opts[@]} -eq 0 ]]; then\\n    # shellcheck disable=SC2207\\n    COMPREPLY=(\$(compgen -f "\${cur}"))\\n    return 0\\n  fi\\n\\n  local values\\n  values="\$( printf "\\\\n%s" "\${opts[@]}" )"\\n  local IFS=\$'\\\\n'\\n  # shellcheck disable=SC2207\\n  local result=(\$(compgen -W "\${values[@]}" -- "\${cur}"))\\n  if [[ \${#result[@]} -eq 0 ]]; then\\n    # shellcheck disable=SC2207\\n    COMPREPLY=(\$(compgen -f "\${cur}"))\\n  else\\n    # shellcheck disable=SC2207\\n    COMPREPLY=(\$(printf '%q\\\\n' "\${result[@]}"))\\n  fi\\n\\n  return 0\\n}\\n\\ncomplete -F _completions_test -o bashdefault -o default completions-test\\n\``;

snapshot[`command integration > should generate fish completions 1`] = `\`#!/usr/bin/env fish\\n# fish completion support for completions-test v1.0.0\\n\\nfunction __fish_completions_test_using_command\\n  set cmds __completions_test __completions_test_foo __completions_test_help __completions_test_foo_bar __completions_test_help __completions_test_help __completions_test_completions __completions_test_help __completions_test_completions_bash __completions_test_help __completions_test_completions_fish __completions_test_help __completions_test_completions_zsh __completions_test_help\\n  set words (commandline -opc)\\n  set cmd "_"\\n  for word in \$words\\n    switch \$word\\n      case '-*'\\n        continue\\n      case '*'\\n        set word (string replace -r -a '\\\\W' '_' \$word)\\n        set cmd_tmp \$cmd"_\$word"\\n        if contains \$cmd_tmp \$cmds\\n          set cmd \$cmd_tmp\\n        end\\n    end\\n  end\\n  if [ "\$cmd" = "\$argv[1]" ]\\n    return 0\\n  end\\n  return 1\\nend\\n\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a '(completions-test completions complete color )'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -s V -l version -x -k -f -d 'Show the version number for this program.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -s g -l global -k -f -r -a '(completions-test completions complete boolean )' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -s m -l main -k -f -r -a '(completions-test completions complete boolean )' -d 'Bar option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -s c -l color -k -f -r -a '(completions-test completions complete color )' -d 'Color option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -s C -l colors -k -f -r -a '(completions-test completions complete color )' -d 'Color option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a foo -d 'Foo command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo' -s g -l global -k -f -r -a '(completions-test completions complete boolean foo)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo' -s f -l foo -k -f -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo' -k -f -a bar -d 'Bar command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo_bar' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo_bar' -s g -l global -k -f -r -a '(completions-test completions complete boolean foo bar)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_foo_bar' -s b -l bar -k -f -d 'Bar option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a completions -d 'Generate shell completions.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions' -s g -l global -k -f -r -a '(completions-test completions complete boolean completions)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions' -k -f -a bash -d 'Generate shell completions for bash.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions_bash' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions_bash' -s g -l global -k -f -r -a '(completions-test completions complete boolean completions bash)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions' -k -f -a fish -d 'Generate shell completions for fish.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions_fish' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions_fish' -s g -l global -k -f -r -a '(completions-test completions complete boolean completions fish)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions' -k -f -a zsh -d 'Generate shell completions for zsh.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions_zsh' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_completions_zsh' -s g -l global -k -f -r -a '(completions-test completions complete boolean completions zsh)' -d 'Foo option.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test' -k -f -a help -d 'Show this help or the help of a sub-command.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -k -f -a '(completions-test completions complete command help)'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s h -l help -x -k -f -d 'Show this help.'\\ncomplete -c completions-test -n '__fish_completions_test_using_command __completions_test_help' -s g -l global -k -f -r -a '(completions-test completions complete boolean help)' -d 'Foo option.'\\n\``;

snapshot[`command integration > should generate zsh completions 1`] = `\`#!/usr/bin/env zsh\\n# zsh completion support for completions-test v1.0.0\\n\\nautoload -U is-at-least\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[__completions_test_complete] )) ||\\nfunction __completions_test_complete {\\n  local name="\$1"; shift\\n  local action="\$1"; shift\\n  integer ret=1\\n  local -a values\\n  local expl lines\\n  _tags "\$name"\\n  while _tags; do\\n    if _requested "\$name"; then\\n      # shellcheck disable=SC2034\\n      lines="\$(completions-test completions complete "\${action}" "\${@}")"\\n      values=("\${(ps:\\\\n:)lines}")\\n      if (( \${#values[@]} )); then\\n        while _next_label "\$name" expl "\$action"; do\\n          compadd -S '' "\${expl[@]}" "\${values[@]}"\\n        done\\n      fi\\n    fi\\n  done\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test] )) ||\\nfunction _completions_test() {\\n  local state\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'foo:Foo command.'\\n      'help:Show this help or the help of a sub-command.'\\n      'completions:Generate shell completions.'\\n    )\\n    _describe 'command' commands\\n    __completions_test_complete color color \\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      foo) _completions_test_foo ;;\\n      help) _completions_test_help ;;\\n      completions) _completions_test_completions ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(- *)'{-V,--version}'[Show the version number for this program.]' \\\\\\n    '(-h --help -V --version -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '(-h --help -V --version -m --main)'{-m,--main}'[Bar option.]:val:->val-boolean' \\\\\\n    '(-h --help -V --version -c --color)'{-c,--color}'[Color option.]:val:->val-color' \\\\\\n    '(-h --help -V --version -C --colors)'{-C,--colors}'[Color option.]:val:->val-color' \\\\\\n    '1:command:_commands'\\\\\\n    '2::path:_files'\\\\\\n    '3::path:_files'\\\\\\n    '4::path:_files'\\\\\\n    '5::path:_files'\\\\\\n    '6::path:_files' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean  ;;\\n    val-color) __completions_test_complete val color  ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_foo] )) ||\\nfunction _completions_test_foo() {\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'help:Show this help or the help of a sub-command.'\\n      'bar:Bar command.'\\n    )\\n    _describe 'command' commands\\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      help) _completions_test_foo_help ;;\\n      bar) _completions_test_foo_bar ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '(-h --help -f --foo)'{-f,--foo}'[Foo option.]' \\\\\\n    '1:command:_commands' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean foo ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_foo_help] )) ||\\nfunction _completions_test_foo_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command foo help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean foo help ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_foo_bar] )) ||\\nfunction _completions_test_foo_bar() {\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'help:Show this help or the help of a sub-command.'\\n    )\\n    _describe 'command' commands\\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      help) _completions_test_foo_bar_help ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '(-h --help -b --bar)'{-b,--bar}'[Bar option.]' \\\\\\n    '1:command:_commands' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean foo bar ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_foo_bar_help] )) ||\\nfunction _completions_test_foo_bar_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command foo bar help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean foo bar help ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_help] )) ||\\nfunction _completions_test_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean help ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions] )) ||\\nfunction _completions_test_completions() {\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'help:Show this help or the help of a sub-command.'\\n      'bash:Generate shell completions for bash.'\\n      'fish:Generate shell completions for fish.'\\n      'zsh:Generate shell completions for zsh.'\\n    )\\n    _describe 'command' commands\\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      help) _completions_test_completions_help ;;\\n      bash) _completions_test_completions_bash ;;\\n      fish) _completions_test_completions_fish ;;\\n      zsh) _completions_test_completions_zsh ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean completions ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_help] )) ||\\nfunction _completions_test_completions_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command completions help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean completions help ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_bash] )) ||\\nfunction _completions_test_completions_bash() {\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'help:Show this help or the help of a sub-command.'\\n    )\\n    _describe 'command' commands\\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      help) _completions_test_completions_bash_help ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean completions bash ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_bash_help] )) ||\\nfunction _completions_test_completions_bash_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command completions bash help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean completions bash help ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_fish] )) ||\\nfunction _completions_test_completions_fish() {\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'help:Show this help or the help of a sub-command.'\\n    )\\n    _describe 'command' commands\\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      help) _completions_test_completions_fish_help ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean completions fish ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_fish_help] )) ||\\nfunction _completions_test_completions_fish_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command completions fish help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean completions fish help ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_zsh] )) ||\\nfunction _completions_test_completions_zsh() {\\n\\n  function _commands() {\\n    local -a commands\\n    # shellcheck disable=SC2034\\n    commands=(\\n      'help:Show this help or the help of a sub-command.'\\n    )\\n    _describe 'command' commands\\n  }\\n\\n  function _command_args() {\\n    case "\${words[1]}" in\\n      help) _completions_test_completions_zsh_help ;;\\n    esac\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands' \\\\\\n    '*::sub command:->command_args'\\n\\n  case "\$state" in\\n    command_args) _command_args ;;\\n    val-boolean) __completions_test_complete val boolean completions zsh ;;\\n  esac\\n}\\n\\n# shellcheck disable=SC2154\\n(( \$+functions[_completions_test_completions_zsh_help] )) ||\\nfunction _completions_test_completions_zsh_help() {\\n\\n  function _commands() {\\n    __completions_test_complete command command completions zsh help\\n  }\\n\\n  _arguments -w -s -S -C \\\\\\n    '(- *)'{-h,--help}'[Show this help.]' \\\\\\n    '(-h --help -g --global)'{-g,--global}'[Foo option.]:val:->val-boolean' \\\\\\n    '1:command:_commands'\\n\\n  case "\$state" in\\n    val-boolean) __completions_test_complete val boolean completions zsh help ;;\\n  esac\\n}\\n\\n# _completions_test "\${@}"\\n\\ncompdef _completions_test completions-test\\n\``;

snapshot[`command integration > should output command help with help command 1`] = `'\\n  \\x1b[1mUsage:\\x1b[22m   \\x1b[35mcompletions-test \\x1b[33m<\\x1b[35m\\x1b[35mcolor\\x1b[35m\\x1b[33m>\\x1b[35m \\x1b[33m[\\x1b[35m\\x1b[35mpath...\\x1b[35m\\x1b[33m]\\x1b[35m\\x1b[39m\\n  \\x1b[1mVersion:\\x1b[22m \\x1b[33m1.0.0\\x1b[39m                             \\n\\n  \\x1b[1mmeta1: \\x1b[22mvalue1\\n  \\x1b[1mmeta2: \\x1b[22mvalue2\\n  \\x1b[1mmeta3: \\x1b[22mvalue3\\n\\n  \\x1b[1mDescription:\\x1b[22m\\n\\n    Completions test.  \\n                       \\n      Completions test.\\n    Completions test.  \\n\\n  \\x1b[1mOptions:\\x1b[22m\\n\\n    \\x1b[34m-h\\x1b[39m, \\x1b[34m--help\\x1b[39m               \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help.                                                             \\n    \\x1b[34m-V\\x1b[39m, \\x1b[34m--version\\x1b[39m            \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show the version number for this program.                                   \\n    \\x1b[34m-g\\x1b[39m, \\x1b[34m--global\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.                                                                 \\n    \\x1b[34m-m\\x1b[39m, \\x1b[34m--main\\x1b[39m     \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Bar option.                                                                 \\n    \\x1b[34m-c\\x1b[39m, \\x1b[34m--color\\x1b[39m    \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n    \\x1b[34m-C\\x1b[39m, \\x1b[34m--colors\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval...\\x1b[39m\\x1b[33m>\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n\\n  \\x1b[1mCommands:\\x1b[22m\\n\\n    \\x1b[34mfoo\\x1b[39m                     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo command.                                \\n    \\x1b[34mhelp\\x1b[39m         \\x1b[33m[\\x1b[39m\\x1b[35mcommand\\x1b[39m\\x1b[33m]\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help or the help of a sub-command.\\n    \\x1b[34mcompletions\\x1b[39m             \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Generate shell completions.                 \\n\\n'`;

snapshot[`command integration > should output sub-command help with help command 1`] = `"\\n  \\x1b[1mUsage:\\x1b[22m   \\x1b[35mcompletions-test foo\\x1b[39m\\n  \\x1b[1mVersion:\\x1b[22m \\x1b[33m1.0.0\\x1b[39m               \\n\\n  \\x1b[1mDescription:\\x1b[22m\\n\\n    Foo command.\\n\\n  \\x1b[1mOptions:\\x1b[22m\\n\\n    \\x1b[34m-h\\x1b[39m, \\x1b[34m--help\\x1b[39m           \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help.  \\n    \\x1b[34m-g\\x1b[39m, \\x1b[34m--global\\x1b[39m  \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.      \\n    \\x1b[34m-f\\x1b[39m, \\x1b[34m--foo\\x1b[39m            \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.      \\n\\n  \\x1b[1mCommands:\\x1b[22m\\n\\n    \\x1b[34mhelp\\x1b[39m  \\x1b[33m[\\x1b[39m\\x1b[35mcommand\\x1b[39m\\x1b[33m]\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help or the help of a sub-command.\\n    \\x1b[34mbar\\x1b[39m              \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Bar command.                                \\n\\n"`;

snapshot[`command integration > should output short help with -h flag 1`] = `'\\n  \\x1b[1mUsage:\\x1b[22m   \\x1b[35mcompletions-test \\x1b[33m<\\x1b[35m\\x1b[35mcolor\\x1b[35m\\x1b[33m>\\x1b[35m \\x1b[33m[\\x1b[35m\\x1b[35mpath...\\x1b[35m\\x1b[33m]\\x1b[35m\\x1b[39m\\n  \\x1b[1mVersion:\\x1b[22m \\x1b[33m1.0.0\\x1b[39m                             \\n\\n  \\x1b[1mmeta1: \\x1b[22mvalue1\\n  \\x1b[1mmeta2: \\x1b[22mvalue2\\n  \\x1b[1mmeta3: \\x1b[22mvalue3\\n\\n  \\x1b[1mDescription:\\x1b[22m\\n\\n    Completions test.  \\n                       \\n      Completions test.\\n    Completions test.  \\n\\n  \\x1b[1mOptions:\\x1b[22m\\n\\n    \\x1b[34m-h\\x1b[39m, \\x1b[34m--help\\x1b[39m               \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help.                                                             \\n    \\x1b[34m-V\\x1b[39m, \\x1b[34m--version\\x1b[39m            \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show the version number for this program.                                   \\n    \\x1b[34m-g\\x1b[39m, \\x1b[34m--global\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.                                                                 \\n    \\x1b[34m-m\\x1b[39m, \\x1b[34m--main\\x1b[39m     \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Bar option.                                                                 \\n    \\x1b[34m-c\\x1b[39m, \\x1b[34m--color\\x1b[39m    \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n    \\x1b[34m-C\\x1b[39m, \\x1b[34m--colors\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval...\\x1b[39m\\x1b[33m>\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n\\n  \\x1b[1mCommands:\\x1b[22m\\n\\n    \\x1b[34mfoo\\x1b[39m                     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo command.                                \\n    \\x1b[34mhelp\\x1b[39m         \\x1b[33m[\\x1b[39m\\x1b[35mcommand\\x1b[39m\\x1b[33m]\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help or the help of a sub-command.\\n    \\x1b[34mcompletions\\x1b[39m             \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Generate shell completions.                 \\n\\n'`;

snapshot[`command integration > should output long help with --help flag 1`] = `'\\n  \\x1b[1mUsage:\\x1b[22m   \\x1b[35mcompletions-test \\x1b[33m<\\x1b[35m\\x1b[35mcolor\\x1b[35m\\x1b[33m>\\x1b[35m \\x1b[33m[\\x1b[35m\\x1b[35mpath...\\x1b[35m\\x1b[33m]\\x1b[35m\\x1b[39m\\n  \\x1b[1mVersion:\\x1b[22m \\x1b[33m1.0.0\\x1b[39m                             \\n\\n  \\x1b[1mmeta1: \\x1b[22mvalue1\\n  \\x1b[1mmeta2: \\x1b[22mvalue2\\n  \\x1b[1mmeta3: \\x1b[22mvalue3\\n\\n  \\x1b[1mDescription:\\x1b[22m\\n\\n    Completions test.  \\n                       \\n      Completions test.\\n    Completions test.  \\n\\n  \\x1b[1mOptions:\\x1b[22m\\n\\n    \\x1b[34m-h\\x1b[39m, \\x1b[34m--help\\x1b[39m               \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help.                                                             \\n    \\x1b[34m-V\\x1b[39m, \\x1b[34m--version\\x1b[39m            \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show the version number for this program.                                   \\n    \\x1b[34m-g\\x1b[39m, \\x1b[34m--global\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.                                                                 \\n    \\x1b[34m-m\\x1b[39m, \\x1b[34m--main\\x1b[39m     \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Bar option.                                                                 \\n                                 foo bar baz. foo bar baz.                                                 \\n                                                                                                           \\n                               foo bar baz.                                                                \\n                               foo bar baz.                                                                \\n    \\x1b[34m-c\\x1b[39m, \\x1b[34m--color\\x1b[39m    \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n    \\x1b[34m-C\\x1b[39m, \\x1b[34m--colors\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval...\\x1b[39m\\x1b[33m>\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n\\n  \\x1b[1mCommands:\\x1b[22m\\n\\n    \\x1b[34mfoo\\x1b[39m                     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo command.                                \\n    \\x1b[34mhelp\\x1b[39m         \\x1b[33m[\\x1b[39m\\x1b[35mcommand\\x1b[39m\\x1b[33m]\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help or the help of a sub-command.\\n    \\x1b[34mcompletions\\x1b[39m             \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Generate shell completions.                 \\n\\n'`;

snapshot[`command integration > should output short version with -V flag 1`] = `'\\n  \\x1b[1mUsage:\\x1b[22m   \\x1b[35mcompletions-test \\x1b[33m<\\x1b[35m\\x1b[35mcolor\\x1b[35m\\x1b[33m>\\x1b[35m \\x1b[33m[\\x1b[35m\\x1b[35mpath...\\x1b[35m\\x1b[33m]\\x1b[35m\\x1b[39m\\n  \\x1b[1mVersion:\\x1b[22m \\x1b[33m1.0.0\\x1b[39m                             \\n\\n  \\x1b[1mmeta1: \\x1b[22mvalue1\\n  \\x1b[1mmeta2: \\x1b[22mvalue2\\n  \\x1b[1mmeta3: \\x1b[22mvalue3\\n\\n  \\x1b[1mDescription:\\x1b[22m\\n\\n    Completions test.  \\n                       \\n      Completions test.\\n    Completions test.  \\n\\n  \\x1b[1mOptions:\\x1b[22m\\n\\n    \\x1b[34m-h\\x1b[39m, \\x1b[34m--help\\x1b[39m               \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help.                                                             \\n    \\x1b[34m-V\\x1b[39m, \\x1b[34m--version\\x1b[39m            \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show the version number for this program.                                   \\n    \\x1b[34m-g\\x1b[39m, \\x1b[34m--global\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.                                                                 \\n    \\x1b[34m-m\\x1b[39m, \\x1b[34m--main\\x1b[39m     \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Bar option.                                                                 \\n    \\x1b[34m-c\\x1b[39m, \\x1b[34m--color\\x1b[39m    \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n    \\x1b[34m-C\\x1b[39m, \\x1b[34m--colors\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval...\\x1b[39m\\x1b[33m>\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n\\n  \\x1b[1mCommands:\\x1b[22m\\n\\n    \\x1b[34mfoo\\x1b[39m                     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo command.                                \\n    \\x1b[34mhelp\\x1b[39m         \\x1b[33m[\\x1b[39m\\x1b[35mcommand\\x1b[39m\\x1b[33m]\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help or the help of a sub-command.\\n    \\x1b[34mcompletions\\x1b[39m             \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Generate shell completions.                 \\n\\n'`;

snapshot[`command integration > should output long version with --version flag 1`] = `'\\n  \\x1b[1mUsage:\\x1b[22m   \\x1b[35mcompletions-test \\x1b[33m<\\x1b[35m\\x1b[35mcolor\\x1b[35m\\x1b[33m>\\x1b[35m \\x1b[33m[\\x1b[35m\\x1b[35mpath...\\x1b[35m\\x1b[33m]\\x1b[35m\\x1b[39m\\n  \\x1b[1mVersion:\\x1b[22m \\x1b[33m1.0.0\\x1b[39m                             \\n\\n  \\x1b[1mmeta1: \\x1b[22mvalue1\\n  \\x1b[1mmeta2: \\x1b[22mvalue2\\n  \\x1b[1mmeta3: \\x1b[22mvalue3\\n\\n  \\x1b[1mDescription:\\x1b[22m\\n\\n    Completions test.  \\n                       \\n      Completions test.\\n    Completions test.  \\n\\n  \\x1b[1mOptions:\\x1b[22m\\n\\n    \\x1b[34m-h\\x1b[39m, \\x1b[34m--help\\x1b[39m               \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help.                                                             \\n    \\x1b[34m-V\\x1b[39m, \\x1b[34m--version\\x1b[39m            \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show the version number for this program.                                   \\n    \\x1b[34m-g\\x1b[39m, \\x1b[34m--global\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo option.                                                                 \\n    \\x1b[34m-m\\x1b[39m, \\x1b[34m--main\\x1b[39m     \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Bar option.                                                                 \\n                                 foo bar baz. foo bar baz.                                                 \\n                                                                                                           \\n                               foo bar baz.                                                                \\n                               foo bar baz.                                                                \\n    \\x1b[34m-c\\x1b[39m, \\x1b[34m--color\\x1b[39m    \\x1b[33m<\\x1b[39m\\x1b[35mval\\x1b[39m\\x1b[33m>\\x1b[39m     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n    \\x1b[34m-C\\x1b[39m, \\x1b[34m--colors\\x1b[39m   \\x1b[33m<\\x1b[39m\\x1b[35mval...\\x1b[39m\\x1b[33m>\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Color option.                              (\\x1b[1mValues: \\x1b[22m\\x1b[32m"blue"\\x1b[39m, \\x1b[32m"yellow"\\x1b[39m, \\x1b[32m"red"\\x1b[39m)\\n\\n  \\x1b[1mCommands:\\x1b[22m\\n\\n    \\x1b[34mfoo\\x1b[39m                     \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Foo command.                                \\n    \\x1b[34mhelp\\x1b[39m         \\x1b[33m[\\x1b[39m\\x1b[35mcommand\\x1b[39m\\x1b[33m]\\x1b[39m  \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Show this help or the help of a sub-command.\\n    \\x1b[34mcompletions\\x1b[39m             \\x1b[31m\\x1b[1m-\\x1b[22m\\x1b[39m Generate shell completions.                 \\n\\n'`;
